components:
  schemas:
    Comment:
      description: https://www.schema.org/Comment
      properties:
        comments:
          items:
            $ref: "#/components/schemas/Comment"
          type: array
        creator:
          $ref: "#/components/schemas/Creator"
        dateCreated:
          format: date-time
          type: string
        dateModified:
          format: date-time
          type: string
        id:
          format: int64
          type: integer
        text:
          type: string
      type: object
    Creator:
      description: https://www.schema.org/Creator
      properties:
        additionalName:
          type: string
        familyName:
          type: string
        givenName:
          type: string
        id:
          format: int64
          type: integer
        image:
          format: uri
          type: string
        name:
          type: string
        profileURL:
          format: uri
          type: string
      type: object
    Document:
      description: https://www.schema.org/Document
      properties:
        adaptedMedia:
          description: https://www.schema.org/ImageObject
          items:
            properties:
              contentUrl:
                format: uri
                type: string
              height:
                type: number
              id:
                format: int64
                type: integer
              resolutionName:
                type: string
              sizeInBytes:
                type: number
              width:
                type: number
            type: object
          type: array
        category:
          items:
            properties:
              categoryId:
                format: int64
                type: integer
              categoryName:
                type: string
            type: object
          type: array
        contentUrl:
          format: binary
          type: string
        creator:
          $ref: "#/components/schemas/Creator"
        dateCreated:
          format: date-time
          type: string
        dateModified:
          format: date-time
          type: string
        description:
          type: string
        encodingFormat:
          type: string
        fileExtension:
          type: string
        folderId:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        keywords:
          items:
            type: string
          type: array
        sizeInBytes:
          type: number
        title:
          type: string
      type: object
    Folder:
      description: https://www.schema.org/Folder
      properties:
        dateCreated:
          format: date-time
          type: string
        dateModified:
          format: date-time
          type: string
        description:
          type: string
        documents:
          items:
            $ref: "#/components/schemas/Document"
          readOnly: true
          type: array
        documentsIds:
          items:
            format: int64
            type: integer
          type: array
          writeOnly: true
        documentsRepository:
          allOf:
            - $ref: "#/components/schemas/Folder"
          readOnly: true
        documentsRepositoryId:
          format: int64
          type: integer
          writeOnly: true
        id:
          format: int64
          type: integer
        name:
          type: string
        subFolders:
          items:
            $ref: "#/components/schemas/Folder"
          type: array
      type: object
info:
  description: ""
  title: ""
  version: v1.0
openapi: 3.0.1
paths:
  "/documents/{document-id}":
    delete:
      parameters:
        - in: path
          name: document-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        204:
          content:
            application/json: {}
          description: ""
      tags: ["Document"]
    get:
      parameters:
        - in: path
          name: document-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
          description: ""
      tags: ["Document"]
  "/documents/{document-id}/categories":
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: path
          name: document-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  format: int64
                  type: integer
                type: array
          description: ""
      tags: ["Document"]
    post:
      parameters:
        - in: path
          name: document-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              format: int64
              type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                format: int64
                type: integer
          description: ""
      tags: ["Document"]
  "/documents/{document-id}/categories/batch-create":
    post:
      parameters:
        - in: path
          name: document-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              format: int64
              type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                format: int64
                type: integer
          description: ""
      tags: ["Document"]
  "/documents/{document-id}/comments":
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: path
          name: document-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Comment"
                type: array
          description: ""
      tags: ["Comment"]
  "/documents-repositories/{documents-repository-id}":
    get:
      parameters:
        - in: path
          name: documents-repository-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: ""
      tags: ["Folder"]
  "/documents-repositories/{documents-repository-id}/documents":
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: path
          name: documents-repository-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Document"
                type: array
          description: ""
      tags: ["Document"]
    post:
      parameters:
        - in: path
          name: documents-repository-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
          description: ""
      tags: ["Document"]
  "/documents-repositories/{documents-repository-id}/documents/batch-create":
    post:
      parameters:
        - in: path
          name: documents-repository-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
          description: ""
      tags: ["Document"]
  "/documents-repositories/{documents-repository-id}/folders":
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: path
          name: documents-repository-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Folder"
                type: array
          description: ""
      tags: ["Folder"]
    post:
      parameters:
        - in: path
          name: documents-repository-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Folder"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: ""
      tags: ["Folder"]
  "/documents-repositories/{documents-repository-id}/folders/batch-create":
    post:
      parameters:
        - in: path
          name: documents-repository-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Folder"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: ""
      tags: ["Folder"]
  "/folders/{folder-id}":
    delete:
      parameters:
        - in: path
          name: folder-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        204:
          content:
            application/json: {}
          description: ""
      tags: ["Folder"]
    get:
      parameters:
        - in: path
          name: folder-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: ""
      tags: ["Folder"]
    put:
      parameters:
        - in: path
          name: folder-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Folder"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: ""
      tags: ["Folder"]
  "/folders/{folder-id}/documents":
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: path
          name: folder-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Document"
                type: array
          description: ""
      tags: ["Document"]
    post:
      parameters:
        - in: path
          name: folder-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                document:
                  $ref: "#/components/schemas/Document"
                file:
                  type: string
                  format: binary
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
          description: ""
      tags: ["Document"]
  "/folders/{folder-id}/documents/batch-create":
    post:
      parameters:
        - in: path
          name: folder-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                document:
                  $ref: "#/components/schemas/Document"
                file:
                  type: string
                  format: binary
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
          description: ""
      tags: ["Document"]
  "/folders/{folder-id}/folders":
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: path
          name: folder-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Folder"
                type: array
          description: ""
      tags: ["Folder"]
    post:
      parameters:
        - in: path
          name: folder-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Folder"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: ""
      tags: ["Folder"]
  "/folders/{folder-id}/folders/batch-create":
    post:
      parameters:
        - in: path
          name: folder-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Folder"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: ""
      tags: ["Folder"]